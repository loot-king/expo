name: Ad-hoc iOS Client Shell App

on:
  workflow_dispatch:
    inputs:
      upload:
        description: 'type "upload" to confirm upload to S3'
        required: false
  schedule:
    - cron: '20 5 * * 2,4,6'

jobs:
  build:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Get cache key of git lfs files
        id: git-lfs
        run: echo "::set-output name=sha256::$(git lfs ls-files | openssl dgst -sha256)"
      - uses: actions/cache@v2
        with:
          path: .git/lfs
          key: ${{ steps.git-lfs.outputs.sha256 }}
      - run: git lfs pull
      - run: echo "::add-path::$(pwd)/bin"
      - run: echo "::set-env name=EXPO_ROOT_DIR::$(pwd)"
      - name: Generate dynamic macros
        # Remove GoogleServices-Info because it has been stripped of all our secret keys
        # Will be generated later in the build process if the user provides their own ios.googleServicesFile
        run: expotools ios-generate-dynamic-macros --skip-template=GoogleService-Info.plist
      - uses: ruby/setup-ruby@v1
      - run: echo "::set-env name=BUNDLE_BIN::$(pwd)/.direnv/bin"
      - name: bundler cache
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('.ruby-version') }}-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: install fastlane
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - run: echo "::add-path::$BUNDLE_BIN"
      - uses: actions/cache@v1
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Build iOS Expo client shell app
        timeout-minutes: 120
        run: fastlane ios create_expo_client_build
      - name: Set tarball name
        id: tarball
        run: echo "::set-output name=filename::ios-expo-client-${{ github.sha }}.tar.gz"
      - name: Package tarball
        run: |
          tar \
            -zcf ${{ steps.tarball.outputs.filename }} \
            expo-client-build/Exponent.xcarchive \
            ios
      - uses: actions/upload-artifact@v2
        with:
          name: ios-expo-client-tarball
          path: ${{ steps.tarball.outputs.filename }}
      - name: Store build logs for debugging crashes
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: fastlane-logs
          path: ~/Logs/fastlane
      - run: brew install awscli
      - name: Upload shell app tarball to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        if: ${{ github.event.inputs.upload == 'upload' }}
        timeout-minutes: 40
        run: |
          aws s3 cp --acl public-read ${{ steps.tarball.outputs.filename }} s3://exp-artifacts
          echo "Release tarball uploaded to s3://exp-artifacts/${{ steps.tarball.outputs.filename }}"
          echo "You can deploy this by updating https://github.com/expo/turtle/tree/master/shellTarballs/ios/client"
          echo "Then follow the deployment instructions: https://github.com/expo/turtle-deploy"
      - name: Set the description for slack message
        if: ${{ github.event_name != 'push' }}
        run: |
          if [ ${{ github.event_name }} == 'schedule' ]; then
            echo "::set-env name=SLACK_MESSAGE_DESCRIPTION::scheduled"
          else
            echo "::set-env name=SLACK_MESSAGE_DESCRIPTION::triggered by ${{ github.actor }}"
          fi
      - uses: 8398a7/action-slack@v3
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.slack_webhook_ios }}
        with:
          channel: '#platform-ios'
          status: ${{ job.status }}
          fields: job,commit,ref,eventName,author,took
          author_name: Ad-hoc iOS Client Shell App (${{ env.SLACK_MESSAGE_DESCRIPTION }})
